{% extends "page.html.twig" %}

{% block stylesheets %}
    <link rel="stylesheet" type="text/css" href="assets/css/bootstrap-select.css" />
{% endblock %}

{% block content %}
    {% if session.bdPermit %}
        {% set selected, unselected = " btn-light border-dark-blue box-shadow-blue ", " btn-secondary text-white " %}
    {% if view is same as('BART') %}
        {% set projectClasslist, bartClasslist = unselected, selected %}
    {% else %}
        {% set projectClasslist, bartClasslist = selected, unselected %}
    {% endif %}
    <div class="row item-margin-bottom">
        <div class="col-12 d-flex">
            <a href="defs.php" class="btn{{- projectClasslist -}} flex-grow item-margin-right text-wrap">Project deficiencies</a>
            <a href="defs.php?view=BART" class="btn{{- bartClasslist -}} flex-grow item-margin-right text-wrap">BART deficiencies</a>
        </div>
    </div>
    {% endif %}
    {% include "infobox.html.twig" %}
    {% include view is same as('BART') ? "bartDefsFilter.html.twig" : "defsFilter.html.twig" %}
{% endblock %}

{% block fullWidthContent %}
    <section class="container-fluid">
    {% include "table.html.twig" %}
    </section>
{% endblock %}


{% block scripts %}
    <script type="text/javascript" src="/assets/js/bootstrap-select.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/downloadjs@1.4.7/download.js"></script>
    <script src="js/{{resetScript.file | default('reset_search.js')}}"></script>
    <script src="js/{{submitScript.file | default('unname_empty_form_controls.js')}}"></script>
    <script src="js/dedupe_selection.js"></script>
    <script src="https://d3js.org/d3.v5.js"></script>
    <script src="js/pie_chart.js"></script>
    <script>
        document.forms.filterForm.addEventListener('submit', {{submitScript.function | default("unnameEmptyFormControls") | raw}})
        document.getElementById('reset-btn').addEventListener('click', ev => {
            {{resetScript.function | default("resetSearch") | raw}}(ev)
        })
        document.querySelectorAll('select[name^="sort_"]').forEach((select, i, collection) => {
            dedupeSelection(select, collection, {{sortOptions | json_encode() | raw}})
            select.addEventListener('change', ev => {
                dedupeSelection(ev.target, collection, {{sortOptions | json_encode() | raw}})
            })
        })
        document.getElementById('getCsvBtn').addEventListener('click', event => {
            const view = getQueryValue('view')
            const fields = view && view === 'BART'
                ? 'id,status,date_created,description,resolution,nextStep,comment&view=BART'
                : 'id,location,severity,status,systemaffected,grouptoresolve,description,specloc,requiredby,duedate,deftype,actionowner,comment'
            let filters = window.location.search
                .toLowerCase()
                .slice(1)
                .replace('view=bart', '')
            filters = filters.startsWith('&') ? filters : `&${filters}`
            filters = filters.replace('defid', 'id')
            const querystring = '?fields=' + fields + filters
            const url = '/api/def.php' + querystring
            fetch(url, {
                credentials: 'same-origin',
                headers: { 'Accept': 'text/csv' }
            }).then(res => {
                if (!res.ok) {
                    console.error(`${res.status}: ${res.statusText}`)
                    throw res.text()
                }
                return res.text()
            }).then(text => {
                const d = new Date()
                const timestamp = d.getFullYear()
                    + '' + (d.getMonth() + 1)
                    + '' + d.getDate()
                    + '' + (d.getHours() < 10 ? '0' + d.getHours() : d.getHours())
                    + '' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes())
                    + '' + (d.getSeconds() < 10 ? '0' + d.getSeconds() : d.getSeconds())
                download(text, `${view || ''}defs_summary_${timestamp}.csv`, 'text/csv')
            }).catch(err => {
                if (typeof err.then === 'function') {
                    err.then(text => {
                        console.error(text)
                    })
                }
                else console.error(err)
            })
        })
        function getQueryValue(key) {
            if (!window.location.search) return false
            const qs = qsToObj()
            if (key in qs) return qs[key]
            return false
        }
        function qsToObj() {
            if (!window.location.search) return false
            return window.location.search
                .slice(1)
                .split('&')
                .reduce((o, prop) => {
                    const [ key, val ] = prop.split('=')
                    o[key] = val
                    return o
                }, {})
        }
    {% if view is same as('BART') %}
        const openCloseChart = new PieChart(
                window.d3,
                'dataContainer',
                { open: '{{ statusData.statusOpen }}', closed: '{{ statusData.statusClosed }}' },
                { red: 'var(--red)', green: 'var(--green)' }
            );
        openCloseChart.draw();
    {% endif %}
    </script>
{% endblock %}
